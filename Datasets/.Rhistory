# Start doing this assignment with your
# knowledge/code from yesterday:
#  Focus on the columns: "Vision" and "Ages"
#   1. Format them both as numeric
#   2. Plot them (y=Vision and x=Ages)
#   3. Get the correlation (r) and its p-value
#   4. Get the simple linear regression (y=a+bx)
#   5. Add the regression line to the plot
# 1.
data$Vision <- as.numeric(data$Vision)
data$Ages   <- as.numeric(data$Ages)
# 2.
plot(y=data$Vision, x=data$Ages, ylim=c(0, 10))
# 3.
cor.test(data$Vision, data$Ages) # r= -0.5 (p=0.007)
# 4.
reg <- lm(data    = data,
formula = Vision ~ Ages)
reg # Vision = 11.1 - 0.09 * Ages     RÂ²=0.22
# 5.
abline(reg)
summary(reg)
### Who is the outlier?
bdat.dt[Vision < 5] # Rolando is the oulier!
### Create a subset of our data without Rolando
bdat.nr <- bdat.dt[Vision > 5]          # Option 1
bdat.nr <- bdat.dt[Person != "Rolando"] # Option 2
# Correlation without Rolando
cor.test(bdat.nr$Vision, bdat.nr$Ages) # r= -0.7 (p<0.0001)
# Regression without Rolando
reg.nr <- lm(data    = bdat.nr,
formula = Vision ~ Ages)
reg.nr # Vision = 11.7 - 0.10 * Ages
summary(reg.nr) # RÂ² = 0.46
# Plot without Rolando
plot(y=bdat.nr$Vision, x=bdat.nr$Ages,
ylim=c(0, 10), xlim=c(0,100))
abline(reg.nr)
##########################################################
# Create plot with more options via ggplot() function
#install.packages("ggplot2")
library(ggplot2)
p <- ggplot(data=bdat.nr, aes(x=Ages, y=Vision))
p <- p + geom_point(color="red", size=3, shape=17)
p <- p + ylab("Person's vision")
p <- p + xlab("Person's age")
p <- p + theme_minimal()
p <- p + scale_y_continuous(limits=c(0,10), breaks=c(1,2,8,9))
p <- p + stat_smooth(method="lm", se=FALSE, color="green")
p <- p + geom_text(aes(y=2, x=40, label="RÂ² = 0.46"))
p # show plot
setwd("D:/Hohenheim/R-SAS.Introductory.Courses/Datasets")
data <- read.delim("03 bad data fixed.txt")
# Reformat dataset as data.table object
library(data.table)
data <- as.data.table(data)
# 1.
data$Vision <- as.numeric(data$Vision)
data$Ages   <- as.numeric(data$Ages)
# 2.
plot(y=data$Vision, x=data$Ages, ylim=c(0, 10))
# 3.
cor.test(data$Vision, data$Ages) # r= -0.5 (p=0.007)
# 4.
reg <- lm(data    = data,
formula = Vision ~ Ages)
reg # Vision = 11.1 - 0.09 * Ages     RÂ²=0.22
# 5.
abline(reg)
summary(reg)
### Who is the outlier?
bdat.dt[Vision < 5] # Rolando is the oulier!
### Create a subset of our data without Rolando
bdat.nr <- bdat.dt[Vision > 5]          # Option 1
### Who is the outlier?
data[Vision < 5] # Rolando is the oulier!
rm(list=ls())
setwd("D:/Hohenheim/R-SAS.Introductory.Courses/Datasets")
data <- read.delim("03 bad data fixed.txt")
# Reformat dataset as data.table object
library(data.table)
data <- as.data.table(data)
# Start doing this assignment with your
# knowledge/code from yesterday:
#  Focus on the columns: "Vision" and "Ages"
#   1. Format them both as numeric
#   2. Plot them (y=Vision and x=Ages)
#   3. Get the correlation (r) and its p-value
#   4. Get the simple linear regression (y=a+bx)
#   5. Add the regression line to the plot
# 1.
data$Vision <- as.numeric(data$Vision)
data$Ages   <- as.numeric(data$Ages)
# 2.
plot(y=data$Vision, x=data$Ages, ylim=c(0, 10))
# 3.
cor.test(data$Vision, data$Ages) # r= -0.5 (p=0.007)
# 4.
reg <- lm(data    = data,
formula = Vision ~ Ages)
reg # Vision = 11.1 - 0.09 * Ages     RÂ²=0.22
# 5.
abline(reg)
summary(reg)
### Who is the outlier?
data[Vision < 5] # Rolando is the oulier!
### Create a subset of our data without Rolando
data.nr <- data[Vision > 5]          # Option 1
data.nr <- data[Person != "Rolando"] # Option 2
# Correlation without Rolando
cor.test(data.nr$Vision, data.nr$Ages) # r= -0.7 (p<0.0001)
# Regression without Rolando
reg.nr <- lm(data    = data.nr,
formula = Vision ~ Ages)
reg.nr # Vision = 11.7 - 0.10 * Ages
summary(reg.nr) # RÂ² = 0.46
# Plot without Rolando
plot(y=data.nr$Vision, x=data.nr$Ages,
ylim=c(0, 10), xlim=c(0,100))
abline(reg.nr)
##########################################################
# Create plot with more options via ggplot() function
#install.packages("ggplot2")
library(ggplot2)
p <- ggplot(data=data.nr, aes(x=Ages, y=Vision))
p <- p + geom_point(color="red", size=3, shape=17)
p <- p + ylab("Person's vision")
p <- p + xlab("Person's age")
p <- p + theme_minimal()
p <- p + scale_y_continuous(limits=c(0,10), breaks=c(1,2,8,9))
p <- p + stat_smooth(method="lm", se=FALSE, color="green")
p <- p + geom_text(aes(y=2, x=40, label="RÂ² = 0.46"))
p # show plot
p <- p + geom_text(aes(y=2, x=40, label="R^2 = 0.46"))
p # show plot
rm(list=ls())
setwd("D:/Hohenheim/R-SAS.Introductory.Courses/Datasets")
data <- read.delim("03 bad data fixed.txt")
# Reformat dataset as data.table object
library(data.table)
data <- as.data.table(data)
# Start doing this assignment with your
# knowledge/code from yesterday:
#  Focus on the columns: "Vision" and "Ages"
#   1. Format them both as numeric
#   2. Plot them (y=Vision and x=Ages)
#   3. Get the correlation (r) and its p-value
#   4. Get the simple linear regression (y=a+bx)
#   5. Add the regression line to the plot
# 1.
data$Vision <- as.numeric(data$Vision)
data$Ages   <- as.numeric(data$Ages)
# 2.
plot(y=data$Vision, x=data$Ages, ylim=c(0, 10))
# 3.
cor.test(data$Vision, data$Ages) # r= -0.5 (p=0.007)
# 4.
reg <- lm(data    = data,
formula = Vision ~ Ages)
reg # Vision = 11.1 - 0.09 * Ages     RÂ²=0.22
# 5.
abline(reg)
summary(reg)
### Who is the outlier?
data[Vision < 5] # Rolando is the oulier!
### Create a subset of our data without Rolando
data.nr <- data[Vision > 5]          # Option 1
data.nr <- data[Person != "Rolando"] # Option 2
# Correlation without Rolando
cor.test(data.nr$Vision, data.nr$Ages) # r= -0.7 (p<0.0001)
# Regression without Rolando
reg.nr <- lm(data    = data.nr,
formula = Vision ~ Ages)
reg.nr # Vision = 11.7 - 0.10 * Ages
summary(reg.nr) # RÂ² = 0.46
# Plot without Rolando
plot(y=data.nr$Vision, x=data.nr$Ages,
ylim=c(0, 10), xlim=c(0,100))
abline(reg.nr)
##########################################################
# Create plot with more options via ggplot() function
#install.packages("ggplot2")
library(ggplot2)
p <- ggplot(data=data.nr, aes(x=Ages, y=Vision))
p <- p + geom_point(color="red", size=3, shape=17)
p <- p + ylab("Person's vision")
p <- p + xlab("Person's age")
p <- p + theme_minimal()
p <- p + scale_y_continuous(limits=c(0,10), breaks=c(1,2,8,9))
p <- p + stat_smooth(method="lm", se=FALSE, color="green")
p <- p + geom_text(aes(y=2, x=40, label="R^2 = 0.46"))
p # show plot
rm(list=ls())
setwd("D:/Hohenheim/R-SAS.Introductory.Courses/Datasets")
data <- read.delim("03 bad data fixed.txt")
# Reformat dataset as data.table object
library(data.table)
data <- as.data.table(data)
# Start doing this assignment with your
# knowledge/code from yesterday:
#  Focus on the columns: "Vision" and "Ages"
#   1. Format them both as numeric
#   2. Plot them (y=Vision and x=Ages)
#   3. Get the correlation (r) and its p-value
#   4. Get the simple linear regression (y=a+bx)
#   5. Add the regression line to the plot
# 1.
data$Vision <- as.numeric(data$Vision)
data$Ages   <- as.numeric(data$Ages)
# 2.
plot(y=data$Vision, x=data$Ages, ylim=c(0, 10))
# 3.
cor.test(data$Vision, data$Ages) # r= -0.5 (p=0.007)
# 4.
reg <- lm(data    = data,
formula = Vision ~ Ages)
reg # Vision = 11.1 - 0.09 * Ages     RÂ²=0.22
# 5.
abline(reg)
summary(reg)
### Who is the outlier?
data[Vision < 5] # Rolando is the oulier!
### Create a subset of our data without Rolando
data.nr <- data[Vision > 5]          # Option 1
data.nr <- data[Person != "Rolando"] # Option 2
# Correlation without Rolando
cor.test(data.nr$Vision, data.nr$Ages) # r= -0.7 (p<0.0001)
# Regression without Rolando
reg.nr <- lm(data    = data.nr,
formula = Vision ~ Ages)
reg.nr # Vision = 11.7 - 0.10 * Ages
summary(reg.nr) # RÂ² = 0.46
# Plot without Rolando
plot(y=data.nr$Vision, x=data.nr$Ages,
ylim=c(0, 10), xlim=c(0,100))
abline(reg.nr)
##########################################################
# Create plot with more options via ggplot() function
#install.packages("ggplot2")
library(ggplot2)
p <- ggplot(data=data.nr, aes(x=Ages, y=Vision))
p <- p + geom_point(color="red", size=3, shape=17)
p <- p + ylab("Person's vision")
p <- p + xlab("Person's age")
p <- p + theme_minimal()
p <- p + scale_y_continuous(limits=c(0,10), breaks=c(1,2,8,9))
p <- p + stat_smooth(method="lm", se=FALSE, color="green")
p <- p + geom_text(aes(y=2, x=40, label="R2 = 0.46"))
p # show plot
rm(list=ls())
setwd("D:/Hohenheim/R-SAS.Introductory.Courses/Datasets")
data <- read.delim("03 bad data fixed.txt")
# Reformat dataset as data.table object
library(data.table)
data <- as.data.table(data)
# Start doing this assignment with your
# knowledge/code from yesterday:
#  Focus on the columns: "Vision" and "Ages"
#   1. Format them both as numeric
#   2. Plot them (y=Vision and x=Ages)
#   3. Get the correlation (r) and its p-value
#   4. Get the simple linear regression (y=a+bx)
#   5. Add the regression line to the plot
# 1.
data$Vision <- as.numeric(data$Vision)
data$Ages   <- as.numeric(data$Ages)
# 2.
plot(y=data$Vision, x=data$Ages, ylim=c(0, 10))
# 3.
cor.test(data$Vision, data$Ages) # r= -0.5 (p=0.007)
# 4.
reg <- lm(data    = data,
formula = Vision ~ Ages)
reg # Vision = 11.1 - 0.09 * Ages     RÂ²=0.22
# 5.
abline(reg)
summary(reg)
### Who is the outlier?
data[Vision < 5] # Rolando is the oulier!
### Create a subset of our data without Rolando
data.nr <- data[Vision > 5]          # Option 1
data.nr <- data[Person != "Rolando"] # Option 2
# Correlation without Rolando
cor.test(data.nr$Vision, data.nr$Ages) # r= -0.7 (p<0.0001)
# Regression without Rolando
reg.nr <- lm(data    = data.nr,
formula = Vision ~ Ages)
reg.nr # Vision = 11.7 - 0.10 * Ages
summary(reg.nr) # RÂ² = 0.46
# Plot without Rolando
plot(y=data.nr$Vision, x=data.nr$Ages,
ylim=c(0, 10), xlim=c(0,100))
abline(reg.nr)
##########################################################
# Create plot with more options via ggplot() function
#install.packages("ggplot2")
library(ggplot2)
p <- ggplot(data=data.nr, aes(x=Ages, y=Vision))
p <- p + geom_point(color="red", size=3, shape=1)
p <- p + ylab("Person's vision")
p <- p + xlab("Person's age")
p <- p + theme_minimal()
p <- p + scale_y_continuous(limits=c(0,10), breaks=c(1,2,8,9))
p <- p + stat_smooth(method="lm", se=FALSE, color="green")
p <- p + geom_text(aes(y=2, x=40, label="R2 = 0.46"))
p # show plot
rm(list=ls())
setwd("D:/Hohenheim/R-SAS.Introductory.Courses/Datasets")
data <- read.delim("03 bad data fixed.txt")
# Reformat dataset as data.table object
library(data.table)
data <- as.data.table(data)
# Start doing this assignment with your
# knowledge/code from yesterday:
#  Focus on the columns: "Vision" and "Ages"
#   1. Format them both as numeric
#   2. Plot them (y=Vision and x=Ages)
#   3. Get the correlation (r) and its p-value
#   4. Get the simple linear regression (y=a+bx)
#   5. Add the regression line to the plot
# 1.
data$Vision <- as.numeric(data$Vision)
data$Ages   <- as.numeric(data$Ages)
# 2.
plot(y=data$Vision, x=data$Ages, ylim=c(0, 10))
# 3.
cor.test(data$Vision, data$Ages) # r= -0.5 (p=0.007)
# 4.
reg <- lm(data    = data,
formula = Vision ~ Ages)
reg # Vision = 11.1 - 0.09 * Ages     RÂ²=0.22
# 5.
abline(reg)
summary(reg)
### Who is the outlier?
data[Vision < 5] # Rolando is the oulier!
### Create a subset of our data without Rolando
data.nr <- data[Vision > 5]          # Option 1
data.nr <- data[Person != "Rolando"] # Option 2
# Correlation without Rolando
cor.test(data.nr$Vision, data.nr$Ages) # r= -0.7 (p<0.0001)
# Regression without Rolando
reg.nr <- lm(data    = data.nr,
formula = Vision ~ Ages)
reg.nr # Vision = 11.7 - 0.10 * Ages
summary(reg.nr) # RÂ² = 0.46
# Plot without Rolando
plot(y=data.nr$Vision, x=data.nr$Ages,
ylim=c(0, 10), xlim=c(0,100))
abline(reg.nr)
##########################################################
# Create plot with more options via ggplot() function
#install.packages("ggplot2")
library(ggplot2)
p <- ggplot(data=data.nr, aes(x=Ages, y=Vision))
p <- p + geom_point(color="red", size=3, shape=2)
p <- p + ylab("Person's vision")
p <- p + xlab("Person's age")
p <- p + theme_minimal()
p <- p + scale_y_continuous(limits=c(0,10), breaks=c(1,2,8,9))
p <- p + stat_smooth(method="lm", se=FALSE, color="green")
p <- p + geom_text(aes(y=2, x=40, label="R2 = 0.46"))
p # show plot
rm(list=ls())
setwd("D:/Hohenheim/R-SAS.Introductory.Courses/Datasets")
data <- read.delim("03 bad data fixed.txt")
# Reformat dataset as data.table object
library(data.table)
data <- as.data.table(data)
# Start doing this assignment with your
# knowledge/code from yesterday:
#  Focus on the columns: "Vision" and "Ages"
#   1. Format them both as numeric
#   2. Plot them (y=Vision and x=Ages)
#   3. Get the correlation (r) and its p-value
#   4. Get the simple linear regression (y=a+bx)
#   5. Add the regression line to the plot
# 1.
data$Vision <- as.numeric(data$Vision)
data$Ages   <- as.numeric(data$Ages)
# 2.
plot(y=data$Vision, x=data$Ages, ylim=c(0, 10))
# 3.
cor.test(data$Vision, data$Ages) # r= -0.5 (p=0.007)
# 4.
reg <- lm(data    = data,
formula = Vision ~ Ages)
reg # Vision = 11.1 - 0.09 * Ages     RÂ²=0.22
# 5.
abline(reg)
summary(reg)
### Who is the outlier?
data[Vision < 5] # Rolando is the oulier!
### Create a subset of our data without Rolando
data.nr <- data[Vision > 5]          # Option 1
data.nr <- data[Person != "Rolando"] # Option 2
# Correlation without Rolando
cor.test(data.nr$Vision, data.nr$Ages) # r= -0.7 (p<0.0001)
# Regression without Rolando
reg.nr <- lm(data    = data.nr,
formula = Vision ~ Ages)
reg.nr # Vision = 11.7 - 0.10 * Ages
summary(reg.nr) # RÂ² = 0.46
# Plot without Rolando
plot(y=data.nr$Vision, x=data.nr$Ages,
ylim=c(0, 10), xlim=c(0,100))
abline(reg.nr)
##########################################################
# Create plot with more options via ggplot() function
#install.packages("ggplot2")
library(ggplot2)
p <- ggplot(data=data.nr, aes(x=Ages, y=Vision))
p <- p + geom_point(color="red", size=3, shape=17)
p <- p + ylab("Person's vision")
p <- p + xlab("Person's age")
p <- p + theme_minimal()
p <- p + scale_y_continuous(limits=c(0,10), breaks=c(1,2,8,9))
p <- p + stat_smooth(method="lm", se=FALSE, color="orange")
p <- p + geom_text(aes(y=2, x=40, label="R2 = 0.46"))
p # show plot
rm(list=ls())
setwd("D:/Hohenheim/R-SAS.Introductory.Courses/Datasets")
data <- read.delim("03 bad data fixed.txt")
# Reformat dataset as data.table object
library(data.table)
data <- as.data.table(data)
# Start doing this assignment with your
# knowledge/code from yesterday:
#  Focus on the columns: "Vision" and "Ages"
#   1. Format them both as numeric
#   2. Plot them (y=Vision and x=Ages)
#   3. Get the correlation (r) and its p-value
#   4. Get the simple linear regression (y=a+bx)
#   5. Add the regression line to the plot
# 1.
data$Vision <- as.numeric(data$Vision)
data$Ages   <- as.numeric(data$Ages)
# 2.
plot(y=data$Vision, x=data$Ages, ylim=c(0, 10))
# 3.
cor.test(data$Vision, data$Ages) # r= -0.5 (p=0.007)
# 4.
reg <- lm(data    = data,
formula = Vision ~ Ages)
reg # Vision = 11.1 - 0.09 * Ages     RÂ²=0.22
# 5.
abline(reg)
summary(reg)
### Who is the outlier?
data[Vision < 5] # Rolando is the oulier!
### Create a subset of our data without Rolando
data.nr <- data[Vision > 5]          # Option 1
data.nr <- data[Person != "Rolando"] # Option 2
# Correlation without Rolando
cor.test(data.nr$Vision, data.nr$Ages) # r= -0.7 (p<0.0001)
# Regression without Rolando
reg.nr <- lm(data    = data.nr,
formula = Vision ~ Ages)
reg.nr # Vision = 11.7 - 0.10 * Ages
summary(reg.nr) # RÂ² = 0.46
# Plot without Rolando
plot(y=data.nr$Vision, x=data.nr$Ages,
ylim=c(0, 10), xlim=c(0,100))
abline(reg.nr)
##########################################################
# Create plot with more options via ggplot() function
#install.packages("ggplot2")
library(ggplot2)
p <- ggplot(data=data.nr, aes(x=Ages, y=Vision))
p <- p + geom_point(color="purple", size=3, shape=17)
p <- p + ylab("Person's vision")
p <- p + xlab("Person's age")
p <- p + theme_minimal()
p <- p + scale_y_continuous(limits=c(0,10), breaks=c(1,2,8,9))
p <- p + stat_smooth(method="lm", se=FALSE, color="orange")
p <- p + geom_text(aes(y=2, x=40, label="R2 = 0.46"))
p # show plot
rm(list=ls())
setwd("D:/Hohenheim/R-SAS.Introductory.Courses/Datasets")
crd <- read.delim("04 crd variety.txt")
# Completely randomized design (CRD)
# One-Way ANOVA
crd$Variety   <- as.factor(crd$Variety)
crd$Replicate <- as.factor(crd$Replicate)
# plot for first impression
plot(y=crd$Yield, x=crd$Variety)
# Fit general linear model
###########################
# Treatment effects: Variety
# Design effects:    -
# Step 1: Check F-Test of ANOVA
# Step 2: Compare adjusted means per level
mod <- lm(data    = crd,
formula = Yield ~ Variety)
library(ggfortify)
autoplot(mod) # Residual plots
# get means and comparisons
means  <- emmeans(mod, pairwise ~ Variety)
means
# get means and comparisons
means  <- emmeans(mod, pairwise ~ Variety, adjust ="tukey")
# get means and comparisons
means  <- emmeans(mod, pairwise ~ Variety, adjust ="t")
means
# get means and comparisons
means  <- emmeans(mod, pairwise ~ Variety, adjust = "mvt")
means
# get means and comparisons
means  <- emmeans(mod, pairwise ~ Variety, adjust = "none")
means
# get means and comparisons
means  <- emmeans(mod, pairwise ~ Variety, adjust = "tukey")
